{"remainingRequest":"/media/lucky8548875/SJ Raymundo (2TB)/Documents/Shame/remember-them-little-pwa/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/lucky8548875/SJ Raymundo (2TB)/Documents/Shame/remember-them-little-pwa/src/views/child-views/admin-packages.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/lucky8548875/SJ Raymundo (2TB)/Documents/Shame/remember-them-little-pwa/src/views/child-views/admin-packages.vue","mtime":1551429820232},{"path":"/media/lucky8548875/SJ Raymundo (2TB)/Documents/Shame/remember-them-little-pwa/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/media/lucky8548875/SJ Raymundo (2TB)/Documents/Shame/remember-them-little-pwa/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/lucky8548875/SJ Raymundo (2TB)/Documents/Shame/remember-them-little-pwa/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Modal from '@/components/reusable/modal.vue'\nexport default {\n  data (){\n    return {\n      selectedAddon: '',\n\n      // for Adding\n      selectedAddons: [],\n\n      package_inclusions: [],\n\n    }\n  },\n\n  components: {\n    'modal': Modal\n  },\n  methods: {\n    brtonl(text){\n      try{\n      return text.replace(/<br \\/>/g,\"\\n\")\n      }\n      catch {\n        return text\n      }\n    },\n    descriptionToHtml(description){\n      var x = (description+\"\").replace(new RegExp(\"\\n\", \"g\"), \"<br>\")\n      return x\n    },\n    loadPackageInclusions(package_id){\n      this.package_inclusions = this.$store.getters.inclusions.filter(inclusion => inclusion.package_id == package_id).map(inclusion => inclusion.addon_id)\n    },\n    categoryIdToName(id){\n      try{\n        return (this.$store.getters.categories.find(category => category.category_id == id)).category_name\n      }\n      catch{\n        return \"null\";\n      }\n    },\n    addonFinder(addon_id){\n      return this.$store.getters.addons.find(addon => addon.addon_id == addon_id)\n    },\n    prepareAddPackage(submitEvent){\n      console.log('Prepare Add Package Called')\n      \n      var elements = submitEvent.target.elements;\n      var formData = new FormData();\n\n      formData.append('package_name', elements.package_name.value) \n      formData.append('package_description', elements.package_description.value) \n      formData.append('category_id', elements.category_id.value) \n      formData.append('package_price', elements.package_price.value) \n      formData.append('package_minutes', elements.package_minutes.value) \n      formData.append('package_themes', elements.package_themes.value) \n      formData.append('package_active', elements.package_active.checked ? 1 : 0)\n      formData.append('package_promo', elements.package_active.checked ? 1 : 0)\n      formData.append('package_inclusions', JSON.stringify(this.selectedAddons))\n      console.log(JSON.stringify(this.selectedAddons))\n      this.$store.dispatch('addPackage', formData)\n      \n    },\n    prepareEditPackage(submitEvent){\n      console.log('Prepare Edit Package Called')\n      \n      var elements = submitEvent.target.elements;\n      var formData = new FormData();\n      formData.append('package_id', elements.package_id.value) \n      formData.append('package_name', elements.package_name.value) \n      formData.append('package_description', elements.package_description.value) \n      formData.append('category_id', elements.category_id.value) \n      formData.append('package_price', elements.package_price.value) \n      formData.append('package_minutes', elements.package_minutes.value) \n      formData.append('package_themes', elements.package_themes.value) \n      formData.append('package_active', elements.package_active.checked ? 1 : 0)\n      formData.append('package_promo', elements.package_promo.checked ? 1 : 0)\n      formData.append('package_inclusions', JSON.stringify(this.package_inclusions))\n      console.log(JSON.stringify(this.selectedAddons))\n      this.$store.dispatch('editPackage', formData)\n      \n    },\n  }\n}\n  \n",null]}