{"remainingRequest":"/media/lucky8548875/SJ Raymundo (2TB)/Documents/Shame/remember-them-little-pwa/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/lucky8548875/SJ Raymundo (2TB)/Documents/Shame/remember-them-little-pwa/src/components/calendar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/lucky8548875/SJ Raymundo (2TB)/Documents/Shame/remember-them-little-pwa/src/components/calendar.vue","mtime":1548759427983},{"path":"/media/lucky8548875/SJ Raymundo (2TB)/Documents/Shame/remember-them-little-pwa/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/media/lucky8548875/SJ Raymundo (2TB)/Documents/Shame/remember-them-little-pwa/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/lucky8548875/SJ Raymundo (2TB)/Documents/Shame/remember-them-little-pwa/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    mounted() {\n        this.$store.commit('setBookingDate', \"\")\n    },\n    data: function () {\n        return {\n            months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n            date: \"0\",\n            month: new Date().getMonth(),\n            year: new Date().getFullYear(),\n        }\n    },\n    computed: {\n        selected_date(){\n            var x = this.year + \"-\" + (this.month + 1) + \"-\" + this.date\n            this.$store.commit('setBookingDate', x)\n            return x\n        },\n        my_label() {\n            return this.months[this.month] + \" \" + this.year\n        },\n        date_array() {\n\n            var date = new Date(this.year, this.month, 1);\n            var days = [];\n            var temprow = [];\n\n            for (var i = 0; i < date.getDay(); i++) {\n                temprow.push({getDate(){return \"\"}})\n            }\n\n            while (date.getMonth() === this.month) {\n                temprow.push(new Date(date));\n                if (date.getDay() == 6) {\n                    days.push(temprow);\n                    temprow = [];\n                }\n                date.setDate(date.getDate() + 1);\n            }\n            days.push(temprow);\n\n            return days;\n\n\n        }\n    },\n    methods: {\n        dateCheck(date_num){\n            // Return TRUE if INACTIVE\n            var blockedDatesArray = this.$store.getters.blockedDates.map(blocked_date => blocked_date.date)\n            console.log(blockedDatesArray)\n\n            var testdatestring = `${this.year}-${this.month+1<10?0:''}${this.month+1}-${date_num<10?0:''}${date_num}`\n            var testdate = new Date(testdatestring)\n            console.log(`Compare: ${testdatestring}`)\n            if(blockedDatesArray.includes(testdatestring)){\n                return true\n            }\n            var x = testdate.getDay()\n            if(this.$store.getters.blockedDays.includes(x)){\n                return true\n            }\n            var y = new Date()\n\n            if(y > testdate){\n             return true\n            }\n            return false\n        },\n        nextMonth() {\n            if (this.month == 11) {\n                this.month = 0\n                this.year++\n            } else {\n                this.month++\n            }\n        },\n        previousMonth() {\n            if (this.month == 0) {\n                this.month = 11\n                this.year--\n            } else {\n                this.month--\n            }\n        }\n    },\n}\n",null]}